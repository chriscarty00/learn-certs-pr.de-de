### YamlMime:Course
title: Designing and Implementing Microsoft DevOps solutions
metadata:
  title: 'Kurs AZ-400T00-A: Designing and Implementing Microsoft DevOps solutions'
  description: 'Kurs AZ-400T00-A: Designing and Implementing Microsoft DevOps solutions'
  iltScheduling: true
  ms.openlocfilehash: a1d47bb1403bdf97f9b03ed6adc5e77cc6dc7036
  ms.sourcegitcommit: 1697f2407cfde13fb572fd4e41dcd90cb093b487
  ms.translationtype: HT
  ms.contentlocale: de-DE
  ms.lasthandoff: 02/04/2022
  ms.locfileid: "138024633"
uid: course.az-400t00
courseNumber: AZ-400T00
hoursToComplete: 120
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Transformation mit geteilten Zielen und Fristen planen
- skill: Auswählen eines Projekts und Identifizieren von Projektmetriken und Leistungskennzahlen (Key Performance Indicators, KPIs)
- skill: Erstellen eines Teams und einer agilen Organisationsstruktur
- skill: Entwickeln einer Tool-Integrationsstrategie
- skill: Entwerfen einer Lizenzverwaltungsstrategie (z. B. für Azure DevOps- und GitHub-Benutzer*innen)
- skill: Entwerfen einer Strategie für die End-to-End Rückverfolgbarkeit von Arbeitsaufgaben zu Arbeitssoftware
- skill: Entwickeln einer Anmeldungs- und Zugriffsstrategie
- skill: Entwickeln einer Strageie zur Integrierung von Vor-Ort und Cloud-Resourssen
- skill: Vorteile bei der Nutzung einer Lösungskontrolle beschreiben
- skill: Beschreiben von Azure Repos und GitHub
- skill: Migrieren von der TFVC nach Git
- skill: Verwalten der Codequalität, einschließlich technischer Schulden, SonarCloud und anderer Tools
- skill: Aufbau von Organisationswissen über die Codequalität
- skill: Erläutern der Strukturierung von Git-Repositorys
- skill: Beschreiben von verzweigten Git-Workflows
- skill: Nutzen von Pull Requests für Zusammenarbeit und Codeüberprüfungen
- skill: Nutzen von Git-Hooks für die Automatisierung
- skill: Verwenden von Git zum Fördern des Inner-Source-Ansatzes innerhalb einer Organisation
- skill: Erläutern der Rolle von Azure Pipelines und seiner Komponenten
- skill: Konfigurieren von Agents für die Verwendung in Azure Pipelines
- skill: Erklären, warum kontinuierliche Integration wichtig ist
- skill: Implementieren von CI (Continuous Integration) mit Azure Pipelines
- skill: Definieren von Site Reliability Engineering (SRE)
- skill: Entwurfsprozesse zum Messen der Endbenutzerzufriedenheit und Analysieren von Benutzerfeedback
- skill: Entwurfsprozesse zur Automatisierung der Anwendungsanalyse
- skill: Verwalten von Warnmeldungen und Reduzieren von unnötigen und nicht relevanten Warnmeldungen
- skill: Durchführen von Nachbesprechungen ohne Schuldzuweisungen und Schaffung einer Fairnesskultur
- skill: Infrastruktur und Konfigurationsstrategien und die richtigen Werkzeuge für eine Freigabepipeline und Anwendungsinfrastruktur definieren
- skill: Compliance und Sicherheit in Ihre Anwendungsinfrastruktur implementieren
- skill: Beschreiben der potenziellen Herausforderungen bei der Integration von Open-Source-Software
- skill: Überprüfen von Open-Source-Softwarepaketen auf Sicherheit und Lizenzkonformität
- skill: Verwalten von Sicherheits- und Compliancerichtlinien der Organisation
- skill: Integrieren von Lizenz- und Sicherheitsrisikoüberprüfungen in Build- und Bereitstellungspipelines
- skill: Konfigurieren von Buildpipelines für den Zugriff auf Paketsicherheits- und Lizenzbewertung
learningPartnersLink: /learn/certifications/partners
locales:
- en
- zh-cn
- ja
- ko
levels:
- advanced
roles:
- devops-engineer
products:
- azure
exams:
- uid: exam.az-400
studyGuide:
- uid: learn.wwl.introduction-to-devops
- uid: learn.wwl.choose-right-project
- uid: learn.wwl.describe-team-structures
- uid: learn.wwl.migrate-to-devops
- uid: learn.wwl.introduction-to-source-control
- uid: learn.wwl.describe-types-of-source-control-systems
- uid: learn.wwl.work-azure-repos-github
- uid: learn.wwl.structure-your-git-repo
- uid: learn.wwl.manage-git-branches-workflows
- uid: learn.wwl.collaborate-pull-requests-azure-repos
- uid: learn.wwl.explore-git-hooks
- uid: learn.wwl.plan-foster-inner-source
- uid: learn.wwl.manage-git-repositories
- uid: learn.wwl.explore-azure-pipelines
- uid: learn.wwl.manage-azure-pipeline-agents-pools
- uid: learn.wwl.describe-pipelines-concurrency
- uid: learn.wwl.explore-continuous-integration
- uid: learn.wwl.implement-pipeline-strategy
- uid: learn.wwl.integrate-azure-pipelines
- uid: learn.wwl.introduction-to-github-actions
- uid: learn.wwl.learn-continuous-integration-github-actions
- uid: learn.wwl.introduction-to-continuous-delivery
- uid: learn.wwl.explore-release-strategy-recommendations
- uid: learn.wwl.build-high-quality-release-pipeline
- uid: learn.wwl.introduction-to-deployment-patterns
- uid: learn.wwl.implement-blue-green-deployment-feature-toggles
- uid: learn.wwl.implement-canary-releases-dark-launching
- uid: learn.wwl.implement-testing-progressive-exposure-deployment
- uid: learn.wwl.create-release-pipeline
- uid: learn.wwl.configure-provision-environments
- uid: learn.wwl.manage-modularize-tasks-templates
- uid: learn.wwl.automate-inspection-of-health
- uid: learn.wwl.introduction-security-development-process
- uid: learn.wwl.manage-application-configuration-data
- uid: learn.wwl.integrate-identity-management-systems
- uid: learn.wwl.implement-application-configuration
- uid: learn.wwl.explore-infrastructure-as-code-configuration-management
- uid: learn.wwl.create-azure-resources-using-azure-resource-manager-templates
- uid: learn.wwl.create-azure-resources-by-using-azure-cli
- uid: learn.wwl.explore-azure-automation-devops
- uid: learn.wwl.implement-desired-state-configuration-dsc
- uid: learn.wwl.introduction-to-chef-puppet
- uid: learn.wwl.implement-ansible
- uid: learn.wwl.implement-terraform
- uid: learn.wwl.explore-package-dependencies
- uid: learn.wwl.understand-package-management
- uid: learn.wwl.migrate-consolidating-secure-artifacts
- uid: learn.wwl.implement-versioning-strategy
- uid: learn.wwl.design-container-build-strategy
- uid: learn.wwl.implement-docker-multi-stage-builds
- uid: learn.wwl.implement-azure-kubernetes-service-aks
- uid: learn.wwl.explore-kubernetes-tooling
- uid: learn.wwl.integrate-aks-pipelines
- uid: learn.wwl.implement-tools-to-track-usage-flow
- uid: learn.wwl.implement-route-for-mobile-application-crash-report-data
- uid: learn.wwl.develop-monitor-status-dashboards
- uid: learn.wwl.share-knowledge-within-teams
- uid: learn.wwl.explore-sre-design-practices-to-measure-end-user-satisfaction
- uid: learn.wwl.design-processes-to-capture-analyze-user-feedback
- uid: learn.wwl.design-processes-to-automate-application-analytics
- uid: learn.wwl.manage-alerts-blameless-retrospectives-just-culture
- uid: learn.wwl.understand-security-pipeline
- uid: learn.wwl.introduction-to-azure-security-center
- uid: learn.wwl.implement-open-source-software
- uid: learn.wwl.manage-anti-malware-spam-policies
- uid: learn.wwl.integrate-license-vulnerability-scans
- uid: learn.wwl.identify-technical-debt
summary: >-
  Dieser Kurs vermittelt die Kenntnisse und Fähigkeiten zur Entwicklung und Umsetzung von DevOps-Prozessen und -praktiken. Die Teilnehmer*innen lernen, wie sie DevOps planen, Quellcodeverwaltung verwenden, Git für ein Unternehmen skalieren, Artefakte konsolidieren, eine Strategie für das Abhängigkeitsmanagement entwerfen, Geheimnisse verwalten, Continuous-Integration-Ansätze und eine Strategie zum Erstellen von Containern implementieren, eine Releasestrategie entwerfen, einen Releaseverwaltungsworkflow einrichten, ein Bereitstellungsmuster implementieren und Feedbackmechanismen optimieren.


  #### <a name="audience-profile"></a>Zielgruppenprofil


  Die Teilnehmer dieses Kurses sind daran interessiert, DevOps-Prozesse zu entwerfen und zu implementieren oder die Zertifizierungsprüfung für Microsoft Azure DevOps-Lösungen abzulegen.
prerequisitesSection: >-
  Erfolgreiche Kursteilnehmer verfügen über die folgenden Vorkenntnisse und Kenntnisse:&nbsp;
   * Verständnis von Cloud Computing-Konzepten, einschließlich PaaS-, SaaS- und IaaS-Implementierungen
   * Erfahrung in Bezug auf Azure-Verwaltung und Azure-Entwicklung mit nachgewiesenen Kenntnissen in mindestens einem dieser Bereiche
   * Kenntnisse in Bezug auf Versionskontrolle, agile Softwareentwicklung und die wichtigsten Prinzipien der Softwareentwicklung Erfahrung in einer Organisation, die Software bereitstellt, ist hilfreich.&nbsp;Wenn Sie noch nicht mit Azure und Cloud Computing arbeiten, sollten Sie eine der folgenden Ressourcen in Betracht ziehen:&nbsp;
   * Kostenloser Onlinekurs: Azure Fundamentals ([https://docs.microsoft.com/en-us/learn/paths/azure-fundamentals/](https://docs.microsoft.com/en-us/learn/paths/azure-fundamentals/))&nbsp;
   * Präsenzkurs: AZ-900: Azure Fundamentals ([https://docs.microsoft.com/en-us/learn/certifications/courses/az-900t01](https://docs.microsoft.com/en-us/learn/certifications/courses/az-900t01)) Wenn Sie noch nicht mit der Azure-Verwaltung arbeiten, sollten Sie die folgenden Kurse erwägen:
   * Kostenloser Onlinekurs: Prerequisites for Azure Administrators ([https://docs.microsoft.com/en-us/learn/paths/az-104-administrator-prerequisites/](https://docs.microsoft.com/en-us/learn/paths/az-104-administrator-prerequisites/))
   * Präsenzkurs: AZ-104: Microsoft Azure Administrator ([https://docs.microsoft.com/en-us/learn/certifications/courses/az-104t00](https://docs.microsoft.com/en-us/learn/certifications/courses/az-104t00)) und &nbsp;AZ-010: Azure Administration for AWS SysOps ([https://docs.microsoft.com/en-us/learn/certifications/courses/az-010t00](https://docs.microsoft.com/en-us/learn/certifications/courses/az-010t00)) Wenn Sie noch nicht mit Azure Developer arbeiten, sollten Sie die folgenden Kurse erwägen:
   * Kostenloser Onlinekurs: Create serverless applications ([https://docs.microsoft.com/en-us/learn/paths/create-serverless-applications/](https://docs.microsoft.com/en-us/learn/paths/create-serverless-applications/))
   * Präsenzkurs: AZ-204: Developing Solutions for Microsoft Azure ([https://docs.microsoft.com/en-us/learn/certifications/courses/az-204t00](https://docs.microsoft.com/en-us/learn/certifications/courses/az-204t00)) und &nbsp;AZ-020: Microsoft Azure Solutions for AWS Developers ([https://docs.microsoft.com/en-us/learn/certifications/courses/az-020t00](https://docs.microsoft.com/en-us/learn/certifications/courses/az-020t00))
outlineSection: >-
  ### <a name="module-1-get-started-on-a-devops-transformation-journey"></a>Modul 1: Erste Schritte zur DevOps-Transformation


  #### <a name="lessons"></a>Lektionen


  *   Einführung in DevOps


  *   Auswählen des richtigen Projekts


  *   Beschreiben von Teamstrukturen


  *   Migrieren zu DevOps


  *   Einführung in die Quellcodeverwaltung


  *   Beschreiben von Typen von Quellcodeverwaltungssystemen


  *   Arbeiten mit Azure Repos und GitHub



  #### <a name="lab--agile-planning-and-portfolio-management-with-azure-boards"></a>Lab: Agile Planung und Portfoliomanagement mit Azure Boards


  ####


  #### <a name="lab--version-controlling-with-git-in-azure-repos"></a>Lab: Versionskontrolle mit Git in Azure Repos


  ####


  Nach Abschluss dieses Moduls werden die Teilnehmer in der Lage sein:


  *   Verstehen, was DevOps ist und welche Schritte erforderlich sind, um DevOps zu erreichen


  *   Identifizieren von Teams für die Implementierung des Prozesses


  *   Planen der Transformation mit gemeinsamen Zielen und Zeitplänen


  *   Planen und Definieren von Zeitplänen für Ziele


  *   Verstehen der verschiedenen Projekte und Systeme als Einstieg in die Journey


  *   Auswählen eines Projekts zum Starten der DevOps-Transformation


  *   Identifizieren von Gruppen zum Minimieren anfänglicher Widerstände


  *   Identifizieren von Projektmetriken und Key Performance Indicators (KPI)


  *   Grundlegendes zu agilen Verfahren und Prinzipien der agilen Entwicklung


  *   Erstellen eines Teams und einer agilen Organisationsstruktur



  ### <a name="module-2-work-with-git-for-enterprise-devops"></a>Modul 2: Arbeiten mit Git für DevOps in Unternehmen


  #### <a name="lessons"></a>Lektionen


  *   Strukturieren Ihres Git-Repositorys


  *   Verwalten von Git-Verzweigungen und -Workflows


  *   Zusammenarbeiten über Pull Requests in Azure Repos


  *   Erkunden von Git-Hooks


  *   Planen der Förderung der inneren Quelle


  *   Git-Repositorys verwalten



  #### <a name="lab--version-controlling-with-git-in-azure-repos"></a>Lab: Versionskontrolle mit Git in Azure Repos


  ####


  Nach Abschluss dieses Moduls werden die Teilnehmer in der Lage sein:


  *   Grundlegendes zu Git-Repositorys


  *   Implementieren eines Monorepositorys oder mehrerer Repositorys


  *   Erläutern der Strukturierung von Git-Repositorys


  *   Implementieren eines Änderungsprotokolls


  *   Beschreiben von Git-Verzweigungsworkflows


  *   Implementieren von Featurebranches


  *   Implementieren von GitFlow


  *   Forken eines Repositorys


  *   Nutzen von Pull Requests für Zusammenarbeit und Codeüberprüfungen


  *   Senden von Feedback mithilfe von Pull Requests



  ### <a name="module-3-implement-ci-with-azure-pipelines-and-github-actions"></a>Modul 3: Implementieren von CI mit Azure Pipelines und GitHub Actions


  #### <a name="lessons"></a>Lektionen


  *   Erkunden von Azure Pipelines


  *   Verwalten von Azure Pipeline-Agents und Agentpools


  *   Beschreiben von Pipelines und Parallelität


  *   Erkunden von Continuous Integration


  *   Implementieren einer Pipelinestrategie


  *   Integration in Azure Pipelines


  *   Einführung in GitHub-Aktionen


  *   Informationen zu Continuous Integration (CI) mit GitHub Actions



  #### <a name="lab--configuring-agent-pools-and-understanding-pipeline-styles"></a>Lab: Konfigurieren von Agent-Pools und Verstehen von Pipelinearten


  ####


  Nach Abschluss dieses Moduls werden die Teilnehmer in der Lage sein:


  *   Beschreiben von Azure Pipelines


  *   Erläutern der Rolle von Azure Pipelines und seiner Komponenten


  *   Entscheiden über die Zuständigkeit für die Pipelineautomatisierung


  *   Grundlegendes zu Azure Pipeline-Schlüsselbegriffen


  *   Auswählen zwischen von Microsoft gehosteten und selbstgehosteten Agents


  *   Installieren und Konfigurieren von Azure Pipelines-Agents


  *   Konfigurieren von Agentpools


  *   Schützen der Agents und Pools


  *   Verwenden und Schätzen von Parallelaufträgen



  ### <a name="module-4-design-and-implement-a-release-strategy"></a>Modul 4: Entwerfen und Implementieren einer Releasestrategie


  #### <a name="lessons"></a>Lektionen


  *   Einführung in Continuous Delivery (CD)


  *   Kennenlernen der Empfehlungen für eine Releasestrategie


  *   Erstellen einer qualitativ hochwertigen Releasepipeline


  *   Einführung in Bereitstellungsmuster


  *   Implementieren von Blau-Grün-Bereitstellung und Feature Toggles


  *   Implementieren von Canary-Releases und Dark Launching


  *   Implementieren von A/B-Tests und der fortlaufenden Bereitstellung



  #### <a name="lab--controlling-deployments-using-release-gates"></a>Lab: Steuern von Bereitstellungen mithilfe von Releasegates


  ####


  #### <a name="lab--creating-a-release-dashboard"></a>Lab: Erstellen eines Releasedashboards


  ####


  #### <a name="lab--feature-flag-management-with-launchdarkly-and-azure-devops"></a>Lab: Verwalten von Featureflags mit LaunchDarkly und Azure DevOps


  ####


  Nach Abschluss dieses Moduls werden die Teilnehmer in der Lage sein:


  *   Erläutern der Continuous Delivery-Konzepte


  *   Implementieren von Continuous Delivery in dem Entwicklungszyklus


  *   Informationen zu Releases und Bereitstellungen


  *   Identifizieren von Projektmöglichkeiten zum Anwenden von CD


  *   Erläutern, was beim Entwerfen einer Releasestrategie zu berücksichtigen ist


  *   Definieren der Komponenten einer Releasepipeline und Verwenden von Artefaktquellen


  *   Erstellen eines Releasegenehmigungsplans


  *   Implementieren von Release Gates


  *   Zwischen Freigabe und Bereitstellung unterscheiden



  ### <a name="module-5-implement-a-secure-continuous-deployment-using-azure-pipelines"></a>Modul 5: Implementieren eines sicheren Continuous-Deployment-Prozesses mit Azure Pipelines


  #### <a name="lessons"></a>Lektionen


  *   Erstellen einer Releasepipeline


  *   Konfigurieren und Bereitstellen von Umgebungen


  *   Verwalten und Modularisieren von Aufgaben und Vorlagen


  *   Automatisieren der Integritätsprüfung


  *   Einführung in den sicheren Entwicklungsprozess


  *   Verwalten von Anwendungskonfigurationsdaten


  *   Integration mit Identitätsverwaltungssystemen


  *   Implementieren der Anwendungskonfiguration



  #### <a name="lab--integrating-azure-key-vault-with-azure-devops"></a>Lab: Integrieren von Azure Key Vault mit Azure DevOps


  ####


  #### <a name="lab--setting-up-and-running-functional-tests"></a>Lab: Einrichten und Ausführen von Funktionstests


  ####


  #### <a name="lab--configuring-pipelines-as-code-with-yaml"></a>Lab: Konfigurieren von Pipelines-as-Code mit YAML


  ####


  Nach Abschluss dieses Moduls werden die Teilnehmer in der Lage sein:


  *   Terminologie erklären, die in Azure-DevOps und anderen Freigabe-Managementtools verwendet wird


  *   Beschreiben, was Build- und Releaseaufgaben sind, was sie können und einige verfügbare Bereitstellungsaufgaben


  *   Implementieren von Releaseaufträgen


  *   Unterscheiden zwischen Multi-Agent- und Multi-Konfigurations-Releaseaufträgen


  *   Bereitstellen und Konfigurieren der Zielumgebung


  *   Sicheres Bereitstellen in einer Umgebung mithilfe einer Dienstverbindung


  *   Konfigurieren der Automatisierung von Funktionstests und Ausführen von Verfügbarkeitstests


  *   Einrichten der Testinfrastruktur


  *   Verwenden und Verwalten von Aufgaben- und Variablengruppen



  ### <a name="module-6-manage-infrastructure-as-code-using-azure-dsc-and-third-party-tools"></a>Modul 6: Verwalten von Infrastructure-as-Code mithilfe von Azure, DSC und Drittanbietertools


  #### <a name="lessons"></a>Lektionen


  *   Erkunden von Infrastructure-as-Code und Konfigurationsverwaltung


  *   Erstellen von Azure-Ressourcen mithilfe von Azure Resource Manager-Vorlagen


  *   Erstellen von Azure-Ressourcen mit der Azure CLI


  *   Erkunden von Azure Automation mit DevOps


  *   Implementieren von Desired State Configuration (DSC)


  *   Einführung in Chef und Puppet


  *   Implementieren von Ansible


  *   Implementieren von Terraform



  #### <a name="lab--deployments-using-azure-resource-manager-templates"></a>Lab: Bereitstellungen mithilfe von Azure Resource Manager-Vorlagen


  ####


  #### <a name="lab--ansible-with-azure"></a>Lab: Ansible mit Azure


  ####


  #### <a name="lab--automating-infrastructure-deployments-in-the-cloud-with-terraform-and-azure-pipelines"></a>Lab: Automatisieren von Infrastrukturbereitstellungen in der Cloud mit Terraform und Azure Pipelines


  ####


  Nach Abschluss dieses Moduls werden die Teilnehmer in der Lage sein:


  *   Grundlegendes zum Bereitstellen Ihrer Umgebung


  *   Planen Ihrer Umgebungskonfiguration


  *   Auswählen zwischen imperativer und deklarativer Konfiguration


  *   Erläutern der idempotenten Konfiguration


  *   Erstellen von Azure-Ressourcen mithilfe von ARM-Vorlagen


  *   Verstehen von ARM-Vorlagen und Vorlagenkomponenten


  *   Verwalten von Abhängigkeiten und Geheimnissen in Vorlagen


  *   Organisieren und Modularisieren von Vorlagen


  *   Erstellen von Azure-Ressourcen mit der Azure CLI



  ### <a name="module-7-design-and-implement-a-dependency-management-strategy"></a>Modul 7: Entwerfen und Implementieren einer Strategie für die Abhängigkeitsverwaltung


  #### <a name="lessons"></a>Lektionen


  *   Erkunden von Paketabhängigkeiten


  *   Grundlegendes zur Paketverwaltung


  *   Migrieren, Konsolidieren und Sichern von Artefakten


  *   Implementieren einer Versionsverwaltungsstrategie



  #### <a name="lab--package-management-with-azure-artifacts"></a>Lab: Paketverwaltung mit Azure Artifacts


  ####


  Nach Abschluss dieses Moduls werden die Teilnehmer in der Lage sein:


  *   Strategien zur Abhängigkeitsverwaltung definieren


  *   Ermitteln von Abhängigkeiten


  *   Elemente und Komponentisierung der Abhängigkeitsverwaltung beschreiben


  *   Ihre Codebasis auf Abhängigkeiten überprüfen


  *   Implementieren der Paketverwaltung


  *   Verwalten von Paketfeeds


  *   Verwenden und Erstellen von Paketen


  *   Veröffentlichen von Paketen


  *   Identifizieren von Artefaktrepositorys


  *   Migrieren und Integrieren von Artefaktrepositorys



  ### <a name="module-8-create-and-manage-containers-using-docker-and-kubernetes"></a>Modul 8: Erstellen und Verwalten von Containern mit Docker und Kubernetes


  #### <a name="lessons"></a>Lektionen


  *   Entwerfen einer Strategie zur Containererstellung


  *   Implementieren mehrstufiger Docker-Builds


  *   Implementieren von Azure Kubernetes Service (AKS)


  *   Erkunden von Kubernetes-Tools


  *   Integrieren von AKS mit Pipelines



  #### <a name="lab--deploying-docker-containers-to-azure-app-service-web-apps"></a>Lab: Bereitstellen von Docker-Containern für Azure App Service-Web-Apps


  ####


  #### <a name="lab--deploying-a-multi-container-application-to-azure-kubernetes-services"></a>Lab: Bereitstellen einer Anwendung mit mehreren Containern in Azure Kubernetes Service


  ####


  Nach Abschluss dieses Moduls werden die Teilnehmer in der Lage sein:


  *   Entwerfen einer Containerstrategie


  *   Arbeiten mit Docker-Containern


  *   Erstellen einer Azure-Containerregistrierung


  *   Erläutern von Docker-Microservices und -Containern


  *   Implementieren mehrstufiger Builds mit Docker


  *   Grundlegendes zu Buildmustern


  *   Verwalten mehrerer Projekte und Projektlösungen


  *   Hinzufügen von Docker-Unterstützung zu einer vorhandenen Anwendung


  *   Implementieren von Azure Kubernetes Service (AKS)


  *   Bereitstellen und Herstellen einer Verbindung mit einem AKS-Cluster



  ### <a name="module-9-implement-continuous-feedback"></a>Modul 9: Implementieren eines kontinuierlichen Feedbacks


  #### <a name="lessons"></a>Lektionen


  *   Implementieren von Tools zum Nachverfolgen von Verbrauch und Flow


  *   Implementieren der Route für Absturzberichtsdaten mobiler Anwendungen


  *   Entwickeln von Überwachungs- und Statusdashboards


  *   Teilen von Wissen innerhalb von Teams


  *   SRE und Entwurfsmethoden zum Messen der Endbenutzerzufriedenheit


  *   Entwerfen von Prozessen zum Erfassen und Analysieren von Benutzerfeedback


  *   Entwurfsprozesse zur Automatisierung der Anwendungsanalyse


  *   Verwalten von Warnungen, vorwurfsfreien Nachbesprechungen und einer Fairnesskultur



  #### <a name="lab--integration-between-azure-devops-and-microsoft-teams"></a>Lab: Integration zwischen Azure DevOps und Microsoft Teams


  ####


  #### <a name="lab--monitoring-application-performance-with-application-insights"></a>Lab: Überwachen der Anwendungsleistung mit Application Insights


  ####


  Nach Abschluss dieses Moduls werden die Teilnehmer in der Lage sein:


  *   Implementieren von Tools zum Nachverfolgen von Feedback


  *   Planen der kontinuierlichen Überwachung


  *   Implementieren von Application Insights


  *   Verwenden der Kusto-Abfragesprache (KQL)


  *   Implementieren des Routings für mobile Anwendungen


  *   Konfigurieren der App Center-Diagnose


  *   Konfigurieren von Warnungen


  *   Erstellen eines Bugtrackers


  *   Konfigurieren von Azure Dashboards


  *   Verwenden des Ansichts-Designers in Azure Monitor



  ### <a name="module-10-implement-security-and-validate-code-bases-for-compliance"></a>Modul 10: Implementieren der Sicherheit und Überprüfen von Codebasen auf Compliance


  #### <a name="lessons"></a>Lektionen


  *   Grundlegendes zur Sicherheit in der Pipeline


  *   Einführung in Azure Security Center


  *   Implementieren von Open-Source-Software


  *   Verwalten von Richtlinien für Antischadsoftware und Spamschutz


  *   Integrieren von Lizenz- und Sicherheitsrisikoüberprüfungen


  *   Identifizieren technischer Schulden



  #### <a name="lab--implement-security-and-compliance-in-azure-devops-pipelines"></a>Lab: Implementieren von Sicherheit und Compliance in Azure DevOps-Pipelines


  ####


  #### <a name="lab--managing-technical-debt-with-sonarqube-and-azure-devops"></a>Lab: Verwalten technischer Schulden mit SonarQube und Azure DevOps


  ####


  Nach Abschluss dieses Moduls werden die Teilnehmer in der Lage sein:


  *   Integrieren von Sicherheitstools wie WhiteSource, Micro Focus, Checkmarx und Veracode in Azure DevOps


  *   Implementieren von Pipelinesicherheit


  *   Verwenden des Secure DevOps Kit für Azure (AzSK)


  *   Konfigurieren von Azure Security Center


  *   Verstehen von Azure-Richtlinien


  *   Beschreiben von Initiativen, Ressourcensperren und Azure Blueprints


  *   Arbeiten mit Azure Advanced Threat Protection (ATP)


  *   Implementieren von Open-Source-Software


  *   Erläutern von Bedenken seitens Unternehmen hinsichtlich Open-Source-Komponenten
