### YamlMime:Course
title: Implementieren von Continuous Delivery
metadata:
  title: 'Kurs AZ-400T03-A: Implementieren von Continuous Delivery'
  description: 'Kurs AZ-400T03-A: Implementieren von Continuous Delivery'
  ms.openlocfilehash: d9f14793b50b54c536bac88cd9ed64a6537dab2b
  ms.sourcegitcommit: b69fd4d0c808e4780010278f0cb189c2246f8dc0
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 12/28/2021
  ms.locfileid: "132107619"
uid: course.az-400t03
courseNumber: AZ-400T03-A
hoursToComplete: 24
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Zwischen Freigabe und Bereitstellung unterscheiden
- skill: Komponenten der Freigabe-Pipeline definieren
- skill: Wichtige Überlegungen für die Erstellung einer Freigabestrategie erklären
- skill: Freigabe gegenüber Freigabeprozess klassifizieren und beschreiben, wie man die Qualität beider steuern kann
- skill: Das Prinzip der Freigabe-Gates beschreiben und wie man mit Freigabehinweisen und Dokumentation umgeht
- skill: Bereitstellungsmuster im traditionellen und modernen Verständnis erklären
- skill: Freigabe-Managementtool auswählen
- skill: Terminologie erklären, die in Azure-DevOps und anderen Freigabe-Managementtools verwendet wird
- skill: Erklären, was Build- und Freigabe-Aufgaben sind, was sie können und einige verfügbare Bereitstellungsaufgaben
- skill: Agent, Agenten-Schlange und Agenten-Pool klassifizieren
- skill: Erklären, warum zuweilen mehrere Freigabeaufträge in einer Freigabe-Pipeline benötigt werden
- skill: Zwischen Multi-Agent und Multi-Konfigurations-Freigabeauftrag unterscheiden
- skill: Freigabe-Variablen und Stufen-Variablen in der Freigabe-Pipeline verwenden
- skill: Eine Umgebung sicher durch eine Serviceverbindung bereitstellen
- skill: Tests in der Pipeline einbetten
- skill: Die verschiedenen Möglichkeiten auflisten, den Zustand Ihrer Pipeline und die Freigabe mit Hilfe von Warnungen, Service-Hooks und Berichten zu überprüfen.
- skill: Freigabe-Gate erstellen
- skill: Bereitstellungsmuster beschreiben
- skill: Implementieren einer Blau-Grün-Bereitstellung
- skill: Canary-Freigabe umsetzen
- skill: Implementieren einer progressiven Belastungs-Bereitstellung
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- advanced
roles:
- devops-engineer
products:
- azure
- azure-devops
- azure-kubernetes-service
- azure-container-instances
- azure-automation
exams:
- uid: exam.az-400
summary: >-
  In diesem Kurs werden die Kenntnisse und Fähigkeiten zum Implementieren von Continuous Delivery vermittelt. Die Kursteilnehmer erfahren, wie sie eine Releasestrategie entwerfen, einen Releaseverwaltungsworkflow einrichten und ein geeignetes Bereitstellungsmuster implementieren.


  #### <a name="audience-profile"></a>Zielgruppenprofil

  Die Teilnehmer dieses Kurses möchten DevOps-Prozesse umsetzen lernen oder die Zertifizierungsprüfung für Microsoft Azure DevOps-Lösungen bestehen.
prerequisitesSection: Grundlegendes Wissen zu Azure, Versionskontrolle, agile Softwareentwicklung und grundlegende Prinzipien der Softwareentwicklung. Es wäre hilfreich, Erfahrung in einem Unternehmen zu haben, das Software liefert.
outlineSection: >-
  ### <a name="module--158-design-a-release-strategy"></a>Modul 1&#58; Entwerfen einer Releasestrategie

  #### <a name="lessons"></a>Lektionen

  - Einführung in Continuous Delivery

  - Empfehlungen für die Releasestrategie

  - Erstellen einer hochwertigen Releasepipeline

  - Auswählen eines Bereitstellungsmusters

  - Auswählen des richtigen Releaseverwaltungstools



  #### <a name="lab-58-building-a-release-strategy"></a>Lab&#58; Erstellen einer Releasestrategie

  Nach Abschluss dieses Moduls können die Schüler:

  - Zwischen Freigabe und Bereitstellung unterscheiden

  - Komponenten der Freigabe-Pipeline definieren

  - Wichtige Überlegungen für die Erstellung einer Freigabestrategie erklären

  - Freigabe gegenüber Freigabeprozess klassifizieren und beschreiben, wie man die Qualität beider steuern kann

  - Das Prinzip der Freigabe-Gates beschreiben und wie man mit Freigabehinweisen und Dokumentation umgeht

  - Bereitstellungsmuster im traditionellen und modernen Verständnis erklären

  - Freigabe-Managementtool auswählen



  ### <a name="module--258-set-up-a-release-management-workflow"></a>Modul 2&#58; Einrichten eines Releaseverwaltungsworkflows

  #### <a name="lessons"></a>Lektionen

  - Erstellen einer Releasepipeline

  - Bereitstellen und Konfigurieren von Umgebungen

  - Verwalten und Modularisieren von Aufgaben und Vorlagen

  - Integrieren von Geheimnissen in die Releasepipeline

  - Konfigurieren einer automatisierten Integration und einer Automatisierung von Funktionstests

  - Automatisieren der Integritätsuntersuchung



  #### <a name="lab-58-automating-your-infrastructure-deployments-in-the-cloud-with-terraform-and-azure-pipelines"></a>Lab&#58; Automatisieren von Infrastrukturbereitstellungen in der Cloud mit Terraform und Azure Pipelines


  #### <a name="lab-58-setting-up-secrets-in-the-pipeline-with-azure-key-vault"></a>Lab&#58; Einrichten von Geheimnissen in der Pipeline mit Azure Key Vault


  #### <a name="lab-58-setting-up-and-running-load-tests"></a>Lab&#58; Einrichten und Ausführen von Auslastungstests


  #### <a name="lab-58-setting-up-and-running-functional-tests"></a>Lab&#58; Einrichten und Ausführen von Funktionstests


  #### <a name="lab-58-using-azure-monitor-as-release-gate"></a>Lab&#58; Verwenden von Azure Monitor als Releasegate


  #### <a name="lab-58-creating-a-release-dashboard"></a>Lab&#58; Erstellen eines Releasedashboards

  Nach Abschluss dieses Moduls können die Schüler:

  - Terminologie erklären, die in Azure-DevOps und anderen Freigabe-Managementtools verwendet wird

  - Erklären, was Build- und Freigabe-Aufgaben sind, was sie können und einige verfügbare Bereitstellungsaufgaben

  - Agent, Agenten-Schlange und Agenten-Pool klassifizieren

  - Erklären, warum zuweilen mehrere Freigabeaufträge in einer Freigabe-Pipeline benötigt werden

  - Zwischen Multi-Agent und Multi-Konfigurations-Freigabeauftrag unterscheiden

  - Freigabe-Variablen und Stufen-Variablen in der Freigabe-Pipeline verwenden

  - Eine Umgebung sicher durch eine Serviceverbindung bereitstellen

  - Tests in der Pipeline einbetten

  - Die verschiedenen Möglichkeiten auflisten, den Zustand Ihrer Pipeline und die Freigabe mit Hilfe von Warnungen, Service-Hooks und Berichten zu überprüfen.

  - Freigabe-Gate erstellen



  ### <a name="module--358-implement-an-appropriate-deployment-pattern"></a>Modul 3&#58; Implementieren eines geeigneten Bereitstellungsmusters

  #### <a name="lessons"></a>Lektionen

  - Einführung in Bereitstellungsmuster

  - Implementieren einer Blau-Grün-Bereitstellung

  - Feature Toggles

  - Canary-Releases

  - Dark Launching

  - A/B-Test

  - Bereitstellung mit progressiver Exposition



  #### <a name="lab-58-blue-green-deployments"></a>Lab&#58; Blau-Grün-Bereitstellungen


  #### <a name="lab-58-traffic-manager"></a>Lab&#58; Traffic Manager

  Nach Abschluss dieses Moduls können die Schüler:

  - Bereitstellungsmuster beschreiben

  - Implementieren einer Blau-Grün-Bereitstellung

  - Canary-Freigabe umsetzen

  - Implementieren einer progressiven Belastungs-Bereitstellung
