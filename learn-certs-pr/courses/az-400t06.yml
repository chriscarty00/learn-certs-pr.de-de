### YamlMime:Course
title: Implementieren von kontinuierlichem Feedback
metadata:
  title: 'Kurs AZ-400T06-A: Implementieren von kontinuierlichem Feedback'
  description: 'Kurs AZ-400T06-A: Implementieren von kontinuierlichem Feedback'
  ms.openlocfilehash: c8116f08906e97a0e68e5ac183ff13f6ddbf934a
  ms.sourcegitcommit: 9732383406c868d1279ca5ca79d423c5b99be073
  ms.translationtype: HT
  ms.contentlocale: de-DE
  ms.lasthandoff: 09/14/2021
  ms.locfileid: "132107602"
uid: course.az-400t06
courseNumber: AZ-400T06-A
hoursToComplete: 24
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Praktiken entwerfen, um Endnutzer-Zufriedenheit zu messen
- skill: Entwickeln von Prozessen zum Erfassen und Analysieren von Nutzerrückmeldungen externer Quellen
- skill: Konzept zum Routing für Crash-Reportdaten der Client-Anwendung
- skill: Empfehlen von Monitoring Tools und Technologien
- skill: Empfohlene Tools zur Nachverfolgung von System-und Featureverwendung
- skill: Konfigurieren der Crash Report-Integration für Client Apps
- skill: Entwickeln von Überwachungs- und Statusdashboards
- skill: Implementierung eines Routings für die Daten des Crash-Berichts der Client-Anwendung
- skill: Tools anwenden, die die Systemnutzung, Funktionsnutzung und den Fluss verfolgen
- skill: Integrieren und Konfigurieren von Ticketsystemen mit dem Arbeitsverwaltungssystem des Entwicklungsteams
- skill: Analysieren von Warnungen zum Einrichten einer Baseline
- skill: Analysieren von Telemetriedaten zum Einrichten einer Baseline
- skill: Durchführung von Live-Überprüfungen vor Ort und Erfassung von Feedback bei Systemausfällen
- skill: Fortlaufende Feinabstimmung zur Minimierung von sinnlosen oder nichtausführbaren Alarmen vornehmen
learningPartnersLink: /learn/certifications/partners
locales:
- en
levels:
- advanced
roles:
- devops-engineer
products:
- azure
- azure-devops
- azure-kubernetes-service
- azure-container-instances
- azure-automation
exams:
- uid: exam.az-400
summary: >-
  In diesem Kurs werden die Kenntnisse und Fähigkeiten zum Implementieren von kontinuierlichem Feedback vermittelt. Die Kursteilnehmer erfahren, wie sie Systemfeedbackmechanismen empfehlen und entwerfen, einen Prozess zum Weiterleiten von Systemfeedback an Entwicklungsteams implementieren und Feedbackmechanismen optimieren können.


  #### <a name="audience-profile"></a>Zielgruppenprofil

  Die Teilnehmer dieses Kurses möchten DevOps-Prozesse umsetzen lernen oder die Zertifizierungsprüfung für Microsoft Azure DevOps-Lösungen bestehen.
prerequisitesSection: Die Teilnehmer dieses Kurses möchten DevOps-Prozesse umsetzen lernen oder die Zertifizierungsprüfung für Microsoft Azure DevOps-Lösungen bestehen.
outlineSection: >-
  ### <a name="module--158-recommend-and-design-system-feedback-mechanisms"></a>Modul 1&#58; Empfehlen und Entwerfen von Systemfeedbackmechanismen

  #### <a name="lessons"></a>Lektionen

  - Die innere Schleife

  - Kontinuierliches Bewusstsein für das Experimentieren

  - Praktiken entwerfen, um Endnutzer-Zufriedenheit zu messen

  - Entwerfen von Prozessen zum Erfassen und Analysieren von Benutzerfeedback

  - Entwerfen eines Prozesses zur Automatisierung der Anwendungsanalyse



  #### <a name="lab-58-integration-between-azure-devops-and-teams"></a>Lab&#58; Integration zwischen Azure DevOps und Teams


  #### <a name="lab-58-feature-flags"></a>Lab&#58; Featureflags

  Nach Abschluss dieses Moduls können die Schüler:

  - Praktiken entwerfen, um Endnutzer-Zufriedenheit zu messen

  - Entwickeln von Prozessen zum Erfassen und Analysieren von Nutzerrückmeldungen externer Quellen

  - Konzept zum Routing für Crash-Reportdaten der Client-Anwendung

  - Empfehlen von Monitoring Tools und Technologien

  - Empfohlene Tools zur Nachverfolgung von System-und Featureverwendung



  ### <a name="module--258-implement-process-for-routing-system-feedback-to-development-teams"></a>Modul 2&#58; Implementieren eines Prozesses zur Weiterleitung von Systemfeedback an Entwicklungsteams

  #### <a name="lessons"></a>Lektionen

  - Tools anwenden, die die Systemnutzung, Funktionsnutzung und den Fluss verfolgen

  - Implementieren des Routings für Absturzberichtsdaten von Mobilanwendungen

  - Entwickeln von Überwachungs- und Statusdashboards

  - Integrieren und Konfigurieren von Ticketsystemen


  Nach Abschluss dieses Moduls können die Schüler:

  - Konfigurieren der Crash Report-Integration für Client Apps

  - Entwickeln von Überwachungs- und Statusdashboards

  - Implementierung eines Routings für die Daten des Crash-Berichts der Client-Anwendung

  - Tools anwenden, die die Systemnutzung, Funktionsnutzung und den Fluss verfolgen

  - Integration und Konfiguration von Ticketingsystemen mit dem Arbeitsmanagementsystem des Entwicklungsteams



  ### <a name="module--358-optimize-feedback-mechanisms"></a>Modul 3&#58; Optimieren von Feedbackmechanismen

  #### <a name="lessons"></a>Lektionen

  - Websitezuverlässigkeits-Engineering (Site Reliability Engineering)

  - Analysieren von Telemetriedaten zum Einrichten einer Baseline

  - Fortlaufende Feinabstimmung zur Minimierung von sinnlosen oder nichtausführbaren Alarmen vornehmen

  - Analysieren von Warnungen zum Einrichten einer Baseline

  - Vorwurfsfreie Nachbesprechung und Fairnesskultur


  Nach Abschluss dieses Moduls können die Schüler:

  - Analysieren von Warnungen zum Einrichten einer Baseline

  - Analysieren von Telemetriedaten zum Einrichten einer Baseline

  - Durchführung von Live-Überprüfungen vor Ort und Erfassung von Feedback bei Systemausfällen

  - Fortlaufende Feinabstimmung zur Minimierung von sinnlosen oder nichtausführbaren Alarmen vornehmen
